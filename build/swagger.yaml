openapi: 3.0.3
info:
  title: EatThis Server API
  version: 1.0.11
servers:
  - url: http://3.38.39.238:3000
  - url: http://localhost:3000
tags:
  - name: User
    description: User API Tag
  - name: Image
    description: image Api Tag
  - name: DeliveryAddress
    description: DeliveryAddress Tag
  - name: Subscribe
    description: Subscribe Tag
  - name: Meal
    description: Meal API Tag
  - name: Material
    description: Material API Tag
#api paths
paths:
  #==================================images 생성 api==================================#
  #식재료 이미지 생성 api
  /api/v1/images/material:
    get:
      tags:
        - Image
      summary: Get Food Image
      description: 식재료 이미지 조회 API
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: 식재료 이름
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: object
                    properties:
                      imageUrl:
                        type: string
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #식단 이미지 생성 api
  /api/v1/images/meal:
    get:
      tags:
        - Image
      summary: Get Meal Image
      description: 식단 이미지 조회 API
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: 식단 이름
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: object
                    properties:
                      imageUrl:
                        type: string
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #================================== 회원가입, 로그인 api==================================#
  # 일반 이메일 회원가입 api
  /api/v1/users/signup:
    post:
      tags:
        - User
      summary: User Signup
      description: 일반 이메일 회원가입 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@gmail.com
                password:
                  type: string
                  example: password123
                birth:
                  type: string
                  format: date
                  example: 2000-01-01
                name:
                  type: string
                  example: 테스트 사용자
                phoneNum:
                  type: string
                  example: 010-1234-1234
                purpose:
                  type: string
                  example: 운동
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
                      email:
                        type: string
                        example: test@gmail.com
                      password:
                        type: string
                        example: password123
                      birth:
                        type: string
                        format: date-time
                        example: 2000-01-01T00:00:00.000Z
                      name:
                        type: string
                        example: 테스트 사용자
                      phoneNum:
                        type: string
                        example: 010-1234-1234
                      purpose:
                        type: string
                        example: 운동
                      createdAt:
                        type: string
                        format: date-time
                        example: 2025-01-18T15:26:52.817Z
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2025-01-18T15:26:52.817Z
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 로그인 api
  /api/v1/users/login:
    post:
      tags:
        - User
      summary: User Login
      description: 로그인 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@gmail.com
                password:
                  type: string
                  example: password123
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
                      email:
                        type: string
                        example: test@gmail.com
                      password:
                        type: string
                        example: password123
                      birth:
                        type: string
                        format: date-time
                        example: 2000-01-01T00:00:00.000Z
                      name:
                        type: string
                        example: 테스트 사용자
                      phoneNum:
                        type: string
                        example: 010-1234-1234
                      purpose:
                        type: string
                        example: 운동
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 닉네임 수정 api
  /api/v1/users/login/nickname:
    post:
      tags:
        - User
      summary: Update name
      description: 닉네임 수정 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                name:
                  type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
                      email:
                        type: string
                        example: test@gmail.com
                      password:
                        type: string
                        example: password123
                      birth:
                        type: string
                        format: date-time
                        example: 2000-01-01T00:00:00.000Z
                      name:
                        type: string
                        example: 테스트 수정
                      phoneNum:
                        type: string
                        example: 010-1234-1234
                      purpose:
                        type: string
                        example: 운동
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 휴회원가입 시 휴대폰 인증번호 발급 & 문자 발송하는 API
  /api/v1/users/signup/otp:
    post:
      tags:
        - User
      summary: User PhoneNumber Code
      description: 회원가입 시 휴대폰 인증번호 발급 & 문자 발송하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                  example: "01012345678"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      mes:
                        type: string
                        example: "인증번호 전송에 성공했습니다."
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"

  # 휴대폰 인증번호 검증하는 API
  /api/v1/users/signup/otp/validation:
    post:
      tags:
        - User
      summary: Validate Code
      description: 휴대폰 인증번호 검증하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                  example: "01012345678"
                code:
                  type: string
                  example: "123456"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      mes:
                        type: string
                        example: "인증번호가 일치합니다."
        "400":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      mes:
                        type: string
                        example: "인증번호가 불일치합니다."
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"

  #로그인 한 유저 데이터 조회 api
  /api/v1/users/mypage/profile:
    get:
      tags:
        - User
      summary: Get Logged in user
      description: 로그인한 유저 정보 조회 API(JWT 필요)
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      nickname:
                        type: string
                        example: 닉넴
                      email:
                        type: string
                        example: test@gmail.com
                      birth:
                        type: string
                        format: date-time
                        example: 2000-01-01T00:00:00.000Z
                      name:
                        type: string
                        example: 이름
                      phoneNum:
                        type: string
                        example: 010-1234-1234
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"

  #유저 회원 탈퇴 api
  /api/v1/users/mypage/delete:
    delete:
      tags:
        - User
      summary: Delete User
      description: 로그인한 유저 회원 정보 삭제 API(JWT 필요)
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleteuser:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
                      email:
                        type: string
                        example: test@gmail.com
                      password:
                        type: string
                        example: test123
                      birth:
                        type: string
                        format: date-time
                        example: 2000-01-01T00:00:00.000Z
                      name:
                        type: string
                        example: 홍길동
                      nickname:
                        type: string
                        example: 닉넴
                      phoneNum:
                        type: string
                        example: 010-1234-1234
                      purpose:
                        type: string
                        example: 운동
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"

  #로그인 한 유저 데이터 수정 api
  /api/v1/users/mypage/update:
    put:
      tags:
        - User
      summary: Update user
      description: 로그인한 유저 정보 수정 API(JWT 필요)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@gmail.com
                nickname:
                  type: string
                  example: 알티
                birth:
                  type: string
                  format: date
                  example: 2000-01-01
                name:
                  type: string
                  example: 테스트 사용자
                phoneNum:
                  type: string
                  example: 010-1234-1234
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      nickname:
                        type: string
                        example: 닉넴
                      email:
                        type: string
                        example: test@gmail.com
                      birth:
                        type: string
                        format: date
                        example: 2000-01-01
                      name:
                        type: string
                        example: 이름
                      phoneNum:
                        type: string
                        example: 010-1234-1234
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 유저 사용 목적 api
  /api/v1/users/survey:
    post:
      tags:
        - User
      summary: post survey
      description: 유저 사용 목적 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                goal:
                  type: string
                  example: 목적
                meals:
                  type: array
                  items:
                    type: string
                  example: ["아침", "점심", "저녁"]
                allergy:
                  type: string
                  example: 유무
                allergyDetails:
                  type: string
                  example: 땅콩
                healthCondition:
                  type: string
                  example: 유무
                healthConditionDetails:
                  type: string
                  example: 고혈압
                gender:
                  type: string
                  example: 남성
                birthYear:
                  type: integer
                  example: 2000
                height:
                  type: integer
                  example: 165
                currentWeight:
                  type: integer
                  example: 55
                targetWeight:
                  type: integer
                  example: 50
                skeletalMuscleMass:
                  type: number
                  format: float
                  example: 35.5
                bodyFatPercentage:
                  type: number
                  format: float
                  example: 15.2
                exerciseFrequency:
                  type: integer
                  example: 4
                job:
                  type: string
                  example: 프리랜서
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey:
                    type: object
                    properties:
                      goal:
                        type: string
                        example: 목적
                      meals:
                        type: array
                        items:
                          type: string
                        example: ["아침", "점심", "저녁"]
                      allergy:
                        type: string
                        example: 유무
                      allergyDetails:
                        type: string
                        example: 땅콩
                      healthCondition:
                        type: string
                        example: 유무
                      healthConditionDetails:
                        type: string
                        example: 고혈압
                      gender:
                        type: string
                        example: 남성
                      birthYear:
                        type: integer
                        example: 2000
                      height:
                        type: integer
                        example: 165
                      currentWeight:
                        type: integer
                        example: 55
                      targetWeight:
                        type: integer
                        example: 50
                      skeletalMuscleMass:
                        type: number
                        format: float
                        example: 35.5
                      bodyFatPercentage:
                        type: number
                        format: float
                        example: 15.2
                      exerciseFrequency:
                        type: integer
                        example: 4
                      job:
                        type: string
                        example: 프리랜서
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
    put:
      tags:
        - User
      summary: put survey
      description: 유저 사용 목적 수정 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                goal:
                  type: string
                  example: 목적
                meals:
                  type: array
                  items:
                    type: string
                  example: ["아침", "점심", "저녁"]
                allergy:
                  type: string
                  example: 유무
                allergyDetails:
                  type: string
                  example: 땅콩
                healthCondition:
                  type: string
                  example: 유무
                healthConditionDetails:
                  type: string
                  example: 고혈압
                gender:
                  type: string
                  example: 남성
                birthYear:
                  type: integer
                  example: 2000
                height:
                  type: integer
                  example: 165
                currentWeight:
                  type: integer
                  example: 55
                targetWeight:
                  type: integer
                  example: 50
                skeletalMuscleMass:
                  type: number
                  format: float
                  example: 35.5
                bodyFatPercentage:
                  type: number
                  format: float
                  example: 15.2
                exerciseFrequency:
                  type: integer
                  example: 4
                job:
                  type: string
                  example: 프리랜서
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey:
                    type: object
                    properties:
                      goal:
                        type: string
                        example: 다이어트
                      meals:
                        type: array
                        items:
                          type: string
                        example: ["아침", "점심"]
                      allergy:
                        type: string
                        example: 있음
                      allergyDetails:
                        type: string
                        example: 땅콩
                      healthCondition:
                        type: string
                        example: 있음
                      healthConditionDetails:
                        type: string
                        example: 고혈압
                      gender:
                        type: string
                        example: 여성
                      birthYear:
                        type: integer
                        example: 1900
                      height:
                        type: integer
                        example: 130
                      currentWeight:
                        type: integer
                        example: 50
                      targetWeight:
                        type: integer
                        example: 40
                      skeletalMuscleMass:
                        type: number
                        format: float
                        example: 10.5
                      bodyFatPercentage:
                        type: number
                        format: float
                        example: 11.2
                      exerciseFrequency:
                        type: integer
                        example: 2
                      job:
                        type: string
                        example: 학생
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #유저 설정 식단 조회 api
  /api/v1/users/mypage/goal:
    get:
      tags:
        - User
      summary: Get user setting
      description: 유저가 설정한 목표 조회 API(JWT 필요)
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      goal:
                        type: string
                        example: 목표
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #유저 건강 점수 조회 api
  /api/v1/users/mypage/healthscore:
    get:
      tags:
        - User
      summary: Get user health score
      description: 유저의 건강 점수 조회 API(JWT 필요)
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      healthscoreId:
                        type: integer
                        example: 1
                      userId:
                        type: integer
                        example: 1
                      healthScore:
                        type: integer
                        exampe: 0~100
                      comparison:
                        type: integer
                        example: -100 ~ +100
                      createdAt:
                        type: string
                        format: date-time
                      updateAt:
                        type: string
                        format: date-time
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #유저 진단 결과 조회 api
  /api/v1/users/mypage/result:
    get:
      tags:
        - User
      summary: Get user diagnosis result
      description: 유저의 진단 결과 조회 API(JWT 필요)
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      diagnosis:
                        type: string
                        example:
                          [
                            근육량 증가 필요,
                            체지방률 확인 필요,
                            단백질 섭취량 조절 필요,
                          ]
                      advice:
                        type: string
                        example:
                          [
                            근육을 늘리기 위해 단백질 섭취 필요,
                            체지방률을 체크하고 조절,
                            근육 증가를 위해 꾸준한 운동이 필요,
                          ]
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #================================== 구독 관련 api==================================#
  # 식단 장바구니 추가 api
  /api/v1/subscribes/meals/cart:
    post:
      tags:
        - Subscribe
      summary: Add Cart
      description: 식단 장바구니 추가 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealSubId:
                  type: integer
                count:
                  type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  kartSub:
                    type: object
                    properties:
                      kartId:
                        type: integer
                      userId:
                        type: integer
                      mealSubId:
                        type: integer
                      cnt:
                        type: integer
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 식단 장바구니 제거 api
  /api/v1/subscribes/meals/cart/{cart_id}:
    post:
      tags:
        - Subscribe
      summary: Delete Cart
      description: 식단 장바구니 제거 API
      parameters:
        - in: path
          name: cart_id
          schema:
            type: integer
          required: true
          description: 삭제할 장바구니 ID
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  kartSub:
                    type: object
                    properties:
                      kartId:
                        type: integer
                      userId:
                        type: integer
                      mealSubId:
                        type: integer
                      cnt:
                        type: integer
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"

  #================================== 식단 api==================================#
  # 하루 식단 생성
  /api/v1/meals/daily:
    post:
      tags:
        - Meal
      summary: Get daily meal
      description: 하루 식단을 조회, 생성하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealDate:
                  type: string
                  format: date-time
                  example: "2025-02-09T12:34:56.789Z"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: array
                    items:
                      type: object
                      properties:
                        mealId:
                          type: integer
                          example: 155
                        food:
                          type: string
                          example: "밥, 시래기국, 돼지고기김치볶음, 부추겉절이, 포기김치"
                        calorieTotal:
                          type: integer
                          example: 560
                        material:
                          type: string
                          example: "백미, 시래기, 돼지고기, 부추, 포기김치"
                        calorieDetail:
                          type: string
                          example: "밥: 200, 시래기국: 100, 돼지고기김치볶음: 200, 부추겉절이: 60"
                        price:
                          type: integer
                          example: 7800
                        difficulty:
                          type: integer
                          example: 3
                        recipe:
                          type: string
                          example: "돼지고기김치볶음: 돼지고기와 김치를 함께 볶음. 부추겉절이: 부추를 양념하여 겉절이로 준비."
                        addedByUser:
                          type: boolean
                          example: false
                  mealType:
                    type: string
                    example: "아침"
              "500":
                description: Fail operation
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/FailResponse"
  # 식단 수동 추가
  /api/v1/meals/manual:
    post:
      tags:
        - Meal
      summary: Add manual meal
      description: 사용자가 직접 식단을 추가하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealDate:
                  type: string
                  format: date-time
                  example: "2025-02-05T00:00:00.000Z"
                time:
                  type: string
                  example: "아침"
                foods:
                  type: array
                  items:
                    type: string
                  example: ["계란", "토스트", "우유"]
                calorieTotal:
                  type: integer
                  example: 500
                addedByUser:
                  type: boolean
                  example: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      mealId:
                        type: integer
                        example: 76
                      food:
                        type: string
                        example: "계란, 토스트, 우유"
                      calorieTotal:
                        type: integer
                        example: 500
                      material:
                        type: string
                        example: "제공되지 않았습니다"
                      calorieDetail:
                        type: string
                        example: "제공되지 않았습니다"
                      price:
                        type: integer
                        example: 0
                      difficulty:
                        type: integer
                        example: 0
                      recipe:
                        type: string
                        example: "제공되지 않았습니다"
                      addedByUser:
                        type: boolean
                        example: true
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 즐겨찾기 추가
  /api/v1/meals/favorite:
    patch:
      tags:
        - Meal
      summary: Add to favorite
      description: 식단을 즐겨찾기하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealId:
                  type: integer
                  example: 9
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      mealUserId:
                        type: integer
                        example: 58
                      userId:
                        type: integer
                        example: 999
                      mealId:
                        type: integer
                        example: 75
                      time:
                        type: string
                        example: "저녁"
                      mealDate:
                        type: string
                        format: date-time
                        example: "2025-02-04T14:59:59.999Z"
                      isMark:
                        type: boolean
                        example: true
                      isLike:
                        type: boolean
                        example: false
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 식단 완료 처리
  /api/v1/meals/complete:
    post:
      tags:
        - Meal
      summary: Complete meal
      description: 식단을 완료 처리하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealId:
                  type: integer
                  example: 9
                mealDate:
                  type: string
                  format: date-time
                  example: "2025-02-09T12:34:56.789Z"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      eatId:
                        type: integer
                        example: 13
                      userId:
                        type: integer
                        example: 999
                      mealId:
                        type: integer
                        example: 75
                      eatAt:
                        type: string
                        format: date-time
                        example: "2025-02-04T12:34:56.789Z"
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 수동 추가한 식단 조회
  /api/v1/meals/manual/list:
    get:
      tags:
        - Meal
      summary: Get manual meals
      description: 사용자가 수동으로 추가한 식단을 조회하는 API
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: array
                    items:
                      type: object
                      properties:
                        mealId:
                          type: integer
                          example: 29
                        food:
                          type: string
                          example: "계란, 토스트, 우유"
                        calorieTotal:
                          type: integer
                          example: 500
                        material:
                          type: string
                          example: ""
                        calorieDetail:
                          type: string
                          example: ""
                        price:
                          type: integer
                          example: 0
                        difficulty:
                          type: integer
                          example: 3
                        recipe:
                          type: string
                          example: ""
                        addedByUser:
                          type: boolean
                          example: true
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 식단 재생성 (새로 고침)
  /api/v1/meals/refresh:
    post:
      tags:
        - Meal
      summary: Refresh meal
      description: 기존 식단을 재생성하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealId:
                  type: integer
                  example: 7
                mealDate:
                  type: string
                  format: date-time
                  example: "2025-02-09T12:34:56.789Z"
                time:
                  type: string
                  example: "아침"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      mealId:
                        type: integer
                        example: 33
                      food:
                        type: string
                        example: "흰쌀밥, 닭가슴살구이, 콩나물무침, 된장국, 깍두기"
                      calorieTotal:
                        type: integer
                        example: 500
                      material:
                        type: string
                        example: ""
                      calorieDetail:
                        type: string
                        example: ""
                      price:
                        type: integer
                        example: 7000
                      difficulty:
                        type: integer
                        example: 3
                      recipe:
                        type: string
                        example: ""
                      addedByUser:
                        type: boolean
                        example: false
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 선호 식단 추가
  /api/v1/meals/preference:
    patch:
      tags:
        - Meal
      summary: Add to preference
      description: 사용자가 선호하는 식단을 추가하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealId:
                  type: integer
                  example: 9
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      mealUserId:
                        type: integer
                        example: 25
                      userId:
                        type: integer
                        example: 1
                      mealId:
                        type: integer
                        example: 25
                      time:
                        type: string
                        example: "아침"
                      mealDate:
                        type: string
                        format: date-time
                        example: "2025-01-30T14:59:59.999Z"
                      isMark:
                        type: boolean
                        example: false
                      isLike:
                        type: boolean
                        example: true
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 수동 추가한 식단 삭제
  /api/v1/meals/manual/delete:
    delete:
      tags:
        - Meal
      summary: delete manual meal
      description: 수동 추가한 식단을 삭제하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealId:
                  type: integer
                  example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      mealId:
                        type: integer
                        example: 84
                      food:
                        type: string
                        example: "계란, 토스트, 우유"
                      calorieTotal:
                        type: integer
                        example: 500
                      material:
                        type: string
                        example: "제공되지 않았습니다"
                      calorieDetail:
                        type: string
                        example: "제공되지 않았습니다"
                      price:
                        type: integer
                        example: 0
                      difficulty:
                        type: integer
                        example: 0
                      recipe:
                        type: string
                        example: "제공되지 않았습니다"
                      addedByUser:
                        type: boolean
                        example: true
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 즐겨찾기한 식단 조회
  /api/v1/meals/favorite/list:
    get:
      tags:
        - Meal
      summary: Get favorite meal list
      description: 사용자가 즐겨찾기한 식단 목록을 가져오는 API
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: array
                    items:
                      type: object
                      properties:
                        mealUserId:
                          type: integer
                          example: 58
                        userId:
                          type: integer
                          example: 999
                        mealId:
                          type: integer
                          example: 75
                        time:
                          type: string
                          example: "저녁"
                        mealDate:
                          type: string
                          format: date-time
                          example: "2025-02-04T14:59:59.999Z"
                        isMark:
                          type: boolean
                          example: true
                        isLike:
                          type: boolean
                          example: false
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 식단 상세 조회
  /api/v1/meals/detail/list:
    get:
      tags:
        - Meal
      summary: Get meal detail
      description: 식단의 상세 정보를 조회하는 API
      parameters:
        - name: mealId
          in: query
          required: true
          schema:
            type: integer
            example: 9
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      mealId:
                        type: integer
                        example: 44
                      food:
                        type: string
                        example: "밥, 된장찌개, 갈치구이, 김치"
                      calorieTotal:
                        type: integer
                        example: 700
                      material:
                        type: string
                        example: "쌀, 된장, 두부, 갈치, 대파, 청양고추, 마늘, 김치"
                      calorieDetail:
                        type: string
                        example: "밥: 300, 된장찌개: 150, 갈치구이: 250, 김치: 50"
                      price:
                        type: integer
                        example: 10000
                      difficulty:
                        type: integer
                        example: 4
                      recipe:
                        type: string
                        example: "된장찌개: 냄비에 물을 끓이고 된장과 마늘을 넣어 끓인 후 두부와 대파를 넣고 끓인다. 갈치구이: 갈치에 소금을 뿌려 양념(다진 마늘, 청양고추)을 바르고 구워낸다."
                      addedByUser:
                        type: boolean
                        example: false
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  # 즐겨찾기 취소
  /api/v1/meals/favorite/delete:
    patch:
      tags:
        - Meal
      summary: 즐겨찾기 취소
      description: 즐겨찾기 취소하는  API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mealId:
                  type: integer
                  example: 9
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 1
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"

  #==================================배송지 관련 api==================================#
  #배송지 관련 url
  /api/v1/deliveryAddress:
    #배송지 정보 작성 api
    post:
      tags:
        - DeliveryAddress
      summary: Add Delivery Address
      description: 배송지 정보 작성 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 이름
                address:
                  type: string
                  example: 서울시 강남구 역삼동 123-4
                postNum:
                  type: integer
                  example: 12345
                phoneNum:
                  type: string
                  example: 010-1234-1234
                memo:
                  type: string
                  example: 문앞(8373)
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: object
                    properties:
                      isSuccess:
                        type: boolean
                        default: true
                      addressId:
                        type: integer
                        default: 0
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
    #배송지 정보 조회 api
    get:
      tags:
        - DeliveryAddress
      summary: Get Delivery Address
      description: 배송지 정보 조회 API
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: "#/components/schemas/DeliveryAddress"
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
    #배송지 정보 수정 api
    put:
      tags:
        - DeliveryAddress
      summary: Update Delivery Address
      description: 배송지 정보 수정 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addressId:
                  type: integer
                  example: 0
                name:
                  type: string
                  example: 이름
                address:
                  type: string
                  example: 서울시 강남구 역삼동 123-4
                postNum:
                  type: integer
                  example: 12345
                phoneNum:
                  type: string
                  example: 010-1234-1234
                memo:
                  type: string
                  example: 문앞(8373)
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: object
                    properties:
                      isSuccess:
                        type: boolean
                        default: true
                      deliveryAddress:
                        $ref: "#/components/schemas/DeliveryAddress"
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #기본 배송지 관련 url
  /api/v1/deliveryAddress/default:
    #기본 배송지 설정 api
    patch:
      tags:
        - DeliveryAddress
      summary: Set Default Delivery Address
      description: 기본 배송지 설정 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addressId:
                  type: integer
                  example: 0
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: object
                    properties:
                      isSuccess:
                        type: boolean
                        default: true
                      deliveryAddress:
                        $ref: "#/components/schemas/DeliveryAddress"
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
    #기본 배송지 조회 api
    get:
      tags:
        - DeliveryAddress
      summary: Get Default Delivery Address
      description: 기본 배송지 조회 API
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: object
                    properties:
                      deliveryAddress:
                        $ref: "#/components/schemas/DeliveryAddress"
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #==================================구독 관련 api==================================#
  #구독 캘린더형 조회 api
  /api/v1/subscribes/users/calendar:
    get:
      tags:
        - Subscribe
      summary: Get Subscribe List Calendar
      description: 구독중인 식단 캘린더형 조회 API
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: object
                    properties:
                      subDateList:
                        type: array
                        items:
                          type: string
                          default: "2025-01-01"
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #구독 리스트형 조회 api
  /api/v1/subscribes/users/list:
    get:
      tags:
        - Subscribe
      summary: Get Subscribe List
      description: 구독중인 식단 리스트형 조회 API
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: array
                    items:
                      type: string
                      default: "노션 페이지 내 응답 예시를 참고해주세요"
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #구독 내역 검색 api
  /api/v1/subscribes/users/search:
    get:
      tags:
        - Subscribe
      summary: Search Subscribe
      description: 구독중인 식단 내역 검색 API
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            example: "2025-01-01"
      responses:
        #성공 응답
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    default: "SUCCESS"
                  error:
                    type: string
                    default: null
                  success:
                    type: array
                    items:
                      type: object
                      properties:
                        orderAt:
                          type: string
                          example: "2025-01-01T00:00:00.000Z"
                        mealSub:
                          type: object
                          properties:
                            mealDate:
                              type: string
                              example: "2025-01-01T00:00:00.000Z"
                            time:
                              type: string
                              example: "아침"
                            meal:
                              type: object
                              properties:
                                mealId:
                                  type: integer
                                  example: 0
                                food:
                                  type: string
                                  example: "잡곡밥, 계란후라이, 시금치 나물, 김치"
                                calorieTotal:
                                  type: integer
                                  example: 400
                            category:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: "다이어트"
        #실패 응답
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
  #==================================재료 관련 api==================================#
  #식재료 즐겨찾기 관련 api
  /api/v1/materials/mark:
    #식재료 즐겨찾기 추가 api
    post:
      tags:
        - Material
      summary: mark Material
      description: 사용자가 즐겨찾기한 식재료를 추가하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                material:
                  type: string
                  example: "사과"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      isSucess:
                        type: boolean
                        example: true
                      material:
                        $ref: "#/components/schemas/Material"
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
    #식재료 즐겨찾기 조회 api
    get:
      tags:
        - Material
      summary: Get Marked Material
      description: 사용자가 즐겨찾기한 식재료를 조회하는 API
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      markList:
                        type: array
                        items:
                          $ref: "#/components/schemas/Material"
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
    #식재료 즐겨찾기 삭제 api
    delete:
      tags:
        - Material
      summary: Delete Marked Material
      description: 사용자가 즐겨찾기한 식재료를 삭제하는 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                material:
                  type: string
                  example: "사과"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: object
                    properties:
                      isSucess:
                        type: boolean
                        example: true
                      material:
                        $ref: "#/components/schemas/Material"
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"

  #================================== 결제 api==================================#
  # 카카오 페이 결제 요청
  /api/v1/payment/kakao:
    post:
      tags:
        - Payment
      summary: Request Kakao Pay
      description: 카카오 페이 결제 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cid:
                  type: string
                  example: "TC0ONETIME"
                orderId:
                  type: string
                  example: "orderId"
                userId:
                  type: string
                  example: "4"
                itemName:
                  type: string
                  example: "결제 상품"
                quantity:
                  type: integer
                  example: 10
                totalAmount:
                  type: integer
                  example: 12000
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: "SUCCESS"
                  error:
                    type: string
                    nullable: true
                    example: null
                  success:
                    type: array
                    items:
                      type: object
                      properties:
                        tid:
                          type: string
                        tms_result:
                          type: string
                        next_redirect_app_url:
                          type: string
                        next_redirect_mobile_url:
                          type: string
                        next_redirect_pc_url:
                          type: string
                        android_app_scheme:
                          type: string
                        ios_app_scheme:
                          type: string
                        created_at:
                          type: string
                          format: date-time
        "500":
          description: Fail operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailResponse"
#components
components:
  schemas:
    #실패 응답 Component
    FailResponse:
      type: object
      properties:
        resultType:
          type: string
          default: "ERROR"
        error:
          type: object
          properties:
            errorCode:
              type: string
            reason:
              type: string
            data:
              type: string
        success:
          type: string
          default: null
    #DeliveryAddress Component
    DeliveryAddress:
      type: object
      properties:
        addressId:
          type: integer
          default: 0
        userId:
          type: integer
          default: 0
        name:
          type: string
          default: "이름"
        address:
          type: string
          default: "서울시 강남구 역삼동 123-4"
        postNum:
          type: integer
          default: 12345
        phoneNum:
          type: string
          default: "010-1234-1234"
        memo:
          type: string
          default: "문앞(8373)"
        isDefault:
          type: boolean
          default: false
    #Material Component
    Material:
      type: object
      properties:
        materialId:
          type: integer
          default: 0
        userId:
          type: integer
          default: 0
        material:
          type: string
          default: "사과"
  #보안 처리
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT

#보안 적용
security:
  - Bearer: []
