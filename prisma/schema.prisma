// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int      @id @default(autoincrement()) @map("user_id")
  email     String   @db.VarChar(100)
  password  String   @db.VarChar(100)
  birth     DateTime @db.DateTime(6)
  name      String   @db.VarChar(100)
  phoneNum  String   @map("phone_num") @db.VarChar(100)
  purpose   String   @db.Text
  isSub     Boolean  @map("is_sub")
  address   String   @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(6)

  agreement     Agreement[]
  reviewSubs    ReviewSub[]
  markMaterials MarkMaterial[]
  likeMeals     LikeMeal[]
  eatMeals      EatMeal[]
  markMeals     MarkMeal[]

  @@map("user")
}

model HotMaterial {
  hotId    Int    @id @default(autoincrement()) @map("hot_id")
  text     String @db.Text
  material String @db.VarChar(100)

  @@map("hot_material")
}

model Meal {
  mealId   Int      @id @default(autoincrement()) @map("meal_id")
  time     String   @db.VarChar(100)
  isEat    Boolean  @map("is_eat")
  isLike   Boolean  @map("is_like")
  isFix    Boolean  @map("is_fix")
  mealDate DateTime @map("meal_date") @db.DateTime(6)

  mealSubs    MealSub[]
  mealDetails MealDetail[]
  markMeals   MarkMeal[]
  likeMeals   LikeMeal[]
  eatMeals    EatMeal[]

  @@map("meal")
}

model MarkMaterial {
  markId   Int    @id @default(autoincrement()) @map("mark_id")
  userId   Int    @map("user_id")
  material String @db.VarChar(100)

  user User @relation(fields: [userId], references: [userId])

  @@map("mark_material")
}

model Agreement {
  agreeId        Int     @id @default(autoincrement()) @map("agree_id")
  userId         Int     @map("user_id")
  agreeMarketing Boolean @map("agree_marketing")
  agreePInfo     Boolean @map("agree_p_info")

  user User @relation(fields: [userId], references: [userId])

  @@map("agreement")
}

model ReviewSub {
  reviewId Int    @id @default(autoincrement()) @map("review_id")
  userId   Int    @map("user_id")
  score    Int
  text     String @db.Text

  user User @relation(fields: [userId], references: [userId])

  @@map("review_sub")
}

model MealSub {
  mealSubId  Int     @id @default(autoincrement()) @map("meal_sub_id")
  mealId     Int     @map("meal_id")
  categoryId Int     @map("category_id")
  isCook     Boolean @map("is_cook")

  meal     Meal            @relation(fields: [mealId], references: [mealId])
  category MealSubCategory @relation(fields: [categoryId], references: [categoryId])

  @@map("meal_sub")
}

model MealDetail {
  detailId      Int    @id @default(autoincrement()) @map("detail_id")
  mealId        Int    @map("meal_id")
  food          String @db.VarChar(100)
  calorieTotal  Int    @map("calorie_total")
  material      String @db.VarChar(100)
  calorieDetail String @map("calorie_detail") @db.VarChar(100)
  price         Int
  difficulty    String @db.VarChar(100)
  recipe        String @db.VarChar(100)

  meal Meal @relation(fields: [mealId], references: [mealId])

  @@map("meal_detail")
}

model EatMeal {
  eatId  Int      @id @default(autoincrement()) @map("eat_id")
  userId Int      @map("user_id")
  mealId Int      @map("meal_id")
  eatAt  DateTime @map("eat_at") @db.DateTime(6)

  user User @relation(fields: [userId], references: [userId])
  meal Meal @relation(fields: [mealId], references: [mealId])

  @@map("eat_meal")
}

model MarkMeal {
  fixId  Int      @id @default(autoincrement()) @map("mark_meal")
  userId Int      @map("user_id")
  mealId Int      @map("meal_id")
  fixAt  DateTime @map("fix_at") @db.DateTime(6)

  user User @relation(fields: [userId], references: [userId])
  meal Meal @relation(fields: [mealId], references: [mealId])

  @@map("mark_meal")
}

model LikeMeal {
  likeId Int      @id @default(autoincrement()) @map("like_id")
  userId Int      @map("user_id")
  mealId Int      @map("meal_id")
  likeAt DateTime @map("like_at") @db.DateTime(6)

  user User @relation(fields: [userId], references: [userId])
  meal Meal @relation(fields: [mealId], references: [mealId])

  @@map("like_meal")
}

model MealSubCategory {
  categoryId Int    @id @default(autoincrement()) @map("category_id")
  name       String @db.VarChar(100)

  mealSubs MealSub[]

  @@map("meal_sub_category")
}

model ImageFood {
  imageId  Int      @id @default(autoincrement()) @map("image_id")
  name     String   @db.VarChar(100)
  imageUrl String   @map("image_url") @db.VarChar(100)
  searchAt DateTime @default(now()) @map("search_at") @db.DateTime(6)

  @@map("image_food")
}
